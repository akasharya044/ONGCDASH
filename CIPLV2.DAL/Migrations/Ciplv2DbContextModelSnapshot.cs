// <auto-generated />
using System;
using CIPLV2.DAL.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CIPLV2.DAL.Migrations
{
    [DbContext(typeof(Ciplv2DbContext))]
    partial class Ciplv2DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CIPLV2.Models.Admin.AdminUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("CIPLV2.Models.Admin.ExceptionLog", b =>
                {
                    b.Property<int>("PKExceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKExceptionId"));

                    b.Property<string>("ActionMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PKExceptionId");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("CIPLV2.Models.Admin.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CIPLV2.Models.Area.Areas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category_c_DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MfAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Subcategory_c_DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("category_c")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("displaylabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entitytype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("impmcategory_c")
                        .HasColumnType("bit");

                    b.Property<string>("phaseid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priority_c")
                        .HasColumnType("int");

                    b.Property<int>("subcategory_c")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CIPLV2.Models.Category.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category_c")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MfCatId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("displaylabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entitytype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("impmcategory_c")
                        .HasColumnType("bit");

                    b.Property<string>("phaseid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CIPLV2.Models.DeviceDetail.DeviceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgentVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LastUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MfDeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entity_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceDetails");
                });

            modelBuilder.Entity("CIPLV2.Models.DeviceDetail.DeviceRunningLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ShutDownTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceRunningLog");
                });

            modelBuilder.Entity("CIPLV2.Models.EventHistories.EventHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventHistory");
                });

            modelBuilder.Entity("CIPLV2.Models.EventHistories.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("CIPLV2.Models.PersonDetail.PersonDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVIP")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LastUpdateTime")
                        .HasColumnType("bigint");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MfpersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entity_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonDetails");
                });

            modelBuilder.Entity("CIPLV2.Models.Registration.MachineRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("agent_version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hard_disk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("install_ram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipaddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mac_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineRegistration");
                });

            modelBuilder.Entity("CIPLV2.Models.SubCategory.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("CIPLV2.Models.SubCategory.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MfAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CIPLV2.Models.SubCategory.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category_c_DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MfSubCatId")
                        .HasColumnType("int");

                    b.Property<int>("category_c")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("displaylabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entitytype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("impmcategory_c")
                        .HasColumnType("bit");

                    b.Property<string>("phaseid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("CIPLV2.Models.Tickets.StarRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ONGCAREA_c")
                        .HasColumnType("int");

                    b.Property<int>("ONGCCAT_c")
                        .HasColumnType("int");

                    b.Property<int>("ONGCSUB_c")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("starcount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StarRating");
                });

            modelBuilder.Entity("CIPLV2.Models.Tickets.TicketRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Completion_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactPerson")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus_c")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpertAssignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpertAssigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FeedBackReceived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FeedBackReceivedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedBackRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbackCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextFeedBackSchedule")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ONGCAREA_c")
                        .HasColumnType("int");

                    b.Property<int?>("ONGCCAT_c")
                        .HasColumnType("int");

                    b.Property<int?>("ONGCSUB_c")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredForActualService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegisteredForDevice_c")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredForLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedByPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedByPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceDeskGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TicketGenerated")
                        .HasColumnType("bit");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatus")
                        .HasColumnType("int");

                    b.Property<int>("close_count")
                        .HasColumnType("int");

                    b.Property<string>("feedback_action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feedback_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feedback_rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feedback_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("starcount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TicketRecords");
                });

            modelBuilder.Entity("CIPLV2.Models.UserSystemHardware.UserSystemHardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsArray")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("userSystemHardwares");
                });

            modelBuilder.Entity("CIPLV2.Models.UserSystemSoftware.UserSystemSoftware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InstalledOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSystemSoftware");
                });
#pragma warning restore 612, 618
        }
    }
}
